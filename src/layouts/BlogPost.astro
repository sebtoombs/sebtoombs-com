---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import Container from "../components/Container.astro";
import OldPostAlert from "../components/OldPostAlert";

export interface Props {
  content: {
    title: string;
    description: string;
    pubDate?: string;
    updatedDate?: string;
    heroImage?: string;
  };
}

const {
  content: { title, description, pubDate, updatedDate, heroImage },
} = Astro.props;

const pubDateFmt = (() => {
  if (!pubDate || !pubDate?.length) return null;
  const ts = Date.parse(pubDate);
  if (isNaN(ts)) return null;
  const date = new Date(ts);
  const dateParts = date.toUTCString().split(" ").slice(1).slice(0, 3);
  return `${dateParts.at(1)} ${dateParts.at(0)}, ${dateParts.at(2)}`;
})();
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <Header />
    <Container>
      <main>
        <article>
          {
            heroImage && (
              <img
                width={720}
                height={360}
                src={heroImage}
                alt=""
                class="max-w-full mx-auto mb-8"
              />
            )
          }
          <div class="mb-10">
            <h2 class="text-5xl font-medium">{title}</h2>
            {
              pubDateFmt && (
                <div class="mt-3">
                  <time class="text-gray-600">{pubDateFmt}</time>
                </div>
              )
            }
          </div>
          {
            updatedDate && (
              <div>
                Last updated on <time>{updatedDate}</time>
              </div>
            )
          }
          <OldPostAlert pubDate={pubDate} client:load className="mb-10" />
          <div class="content">
            <slot />
          </div>
        </article>
      </main>
    </Container>
    <Footer />
  </body>
</html>
